<h2 id="cordova-first-exercise">Cordova First Exercise</h2>
<ul>
<li>Set up your machine to use Cordova <strong>create</strong> command to create a Cordova project.</li>
<li>Create a project called Cordova01-LastName</li>
<li>Create the project and deploy it to the emulator, AndroidX86 or your device.</li>
<li>Take a screenshot of your program running</li>
<li>Put both your project and your screenshot in Git</li>
</ul>
<h2 id="second-assignment">Second Assignment</h2>
<ul>
<li>Create a second project called Cordova02-LastName</li>
<li>Allow the user to enter a value in Fahrenheit and convert to Celsius</li>
<li>Allow the user to enter a value in miles and convert to kilometers</li>
<li>Allow the user to enter a number and calculate the Square Root</li>
<li>Make the background of the form have some color</li>
<li>Set a custom font for headers and paragraph elements.</li>
<li>So you need: HTML, CSS, and JavaScript to make it work.</li>
</ul>
<p>The design is pretty much up to you. For instance:</p>
<ul>
<li>One input area and three buttons.</li>
<li>Three input areas and one button</li>
<li>Three input areas and three buttons</li>
<li>Something else</li>
</ul>
<p>It's your choice</p>
<p>All three conversion methods should be in a single JavaScipt object. Whether the object is a function or conventional JavaScript object is up to you.</p>
<pre><code>var myObject = {
    func: function() {},
    func2: function() {}
}

var MyObject = function() {
    function func() {};
    function func2() {};
} </code></pre>
<p>Remember:</p>
<ul>
<li>HTML in HTML files, JavaScript in JavaScript files, CSS in CSS files</li>
<li>Make sure your code is properly formated</li>
<li>Provide unit tests for conversion methods.</li>
<li>Pay attention to naming conventions! Don't call things myObject or func. Create meaningful names.</li>
</ul>
