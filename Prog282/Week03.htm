<h1 id="week03-prog282-overview">Week03 Prog282 Overview</h1>
<p>Primary Goals:</p>
<ul>
<li><a href="http://bit.ly/1qf6V4t">Agile Development</a></li>
<li><a href="https://github.com/charliecalvert/JsObjects/blob/master/JavaScript/Functions/README.md">Callbacks in JsObjects</a></li>
<li><a href="http://elvenware.com/charlie/development/web/JavaScript/JavaScriptFunctions.html#callbacks-passing-functions-as-parameters">Callbacks on Elvenware</a></li>
<li><a href="https://github.com/charliecalvert/JsObjects/tree/master/JavaScript/Design/FactorySimple01">Patterns: Factory in JsOjbects</a></li>
<li><a href="https://github.com/charliecalvert/JsObjects/tree/master/JavaScript/Design/SimpleQueue">Data Structures: Queues in JsObjects</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions_and_function_scope/Strict_mode">Use Strict on MDN</a></li>
<li><a href="https://github.com/charliecalvert/JsObjects/tree/master/JavaScript/UnitTests">Jasmine Unit Tests</a></li>
<li><a href="https://github.com/mhevery/jasmine-node">Jasmine-node</a></li>
<li><a href="">Learn about Markdown</a></li>
</ul>
<h1 id="jasmine">Jasmine</h1>
<p>To install jasmine-node:</p>
<pre><code>sudo npm install -g jasmine-node</code></pre>
<p>In Designt Factory and Queue Run:</p>
<pre><code>grunt check
RunJasmineTests.sh
node TestRunner.js
grunt pretty</code></pre>
<h2 id="node-and-express">Node and Express</h2>
<p>We will be using node.js, and particularly a node library called Express, as our primary server side tools. Node is a JavaScript based server-side technology. NPM is the Node Package Manager. We use NPM to configure the JavaScript libraries that we use in our node scripts. Express is one of the most important JavaScript libraries.</p>
<ul>
<li><a href="http://nodejs.org/">Install node</a></li>
<li><a href="http://elvenware.com/charlie/development/web/JavaScript/NodeJs.html">Node on Elvenware</a></li>
<li><a href="https://npmjs.org/">NPM Home Page</a></li>
<li><a href="http://expressjs.com/">Express Home Page</a></li>
</ul>
<p>Working with Express in Node:</p>
<ul>
<li><a href="http://www.elvenware.com/charlie/development/web/JavaScript/NodeJs.html#using-express">Express and Node</a></li>
</ul>
<p>Using a directory:</p>
<ul>
<li><a href="http://www.elvenware.com/charlie/development/web/JavaScript/NodeJs.html#using-a-directory-with-app.use">Include Subdirectories in a node Project</a></li>
</ul>
<p>Debugging Node in Eclipse:</p>
<ul>
<li><a href="http://elvenware.com/charlie/development/web/JavaScript/NodeJs.html#debug-node-in-eclipse">Debug Node in Eclipse</a></li>
</ul>
<h2 id="open-id-resources">Open ID Resources</h2>
<p>OpenID is a service that we can use to handle user log in to our application. The actual authentication is handled by OpenID, and we use a node library to confirm that the user is actually who we think they are. If we can confirm their identity then we provide them with access to our game. Furthermore, we now have a user name for them, so we can track their progress, keeping it separate from the progress of other users.</p>
<p>Here are some OpenID resources. There are various OpenID Providers who can verify a user's identity. I have been using MyOpenID. Why don't we all standardize on their site for now, and move only if we find good reason to do so.</p>
<p>Here are some OpenID Links:</p>
<ul>
<li><a href="https://www.myopenid.com">My Open ID</a></li>
<li><a href="https://github.com/havard/node-openid">Node Open ID Interface</a></li>
<li><a href="http://openid.net/">Open ID Home Page</a></li>
<li><a href="http://stackoverflow.com/questions/1087031/whats-the-difference-between-openid-and-oauth">Difference between Open ID and O Auth</a></li>
</ul>
